package com.oasys.listener.fd.SpecialRatifyApp;

import java.util.ArrayList;
import java.util.List;

import org.activiti.engine.delegate.DelegateTask;
import org.activiti.engine.delegate.TaskListener;



import org.apache.commons.lang3.StringUtils;

import com.oasys.listener.BaseTaskListener;
import com.oasys.util.Constants;
import com.oasys.viewModel.WorkFlowTasksModel;
/**
 * 
 * @Title: SpecialRatifyAppTaskListener.java 
 * @Package com.oasys.listener.fd.SpecialRatifyApp 
 * @Description: task监听
 * @author yuanzhongqiu  
 * @date 2015年11月24日 下午4:59:01 
 * @version V1.0
 */
public class SpecialRatifyAppTaskListener extends BaseTaskListener implements TaskListener{
	private static final long serialVersionUID = 1L;
	@Override
	public void notify(DelegateTask task) {

		//申请调整时 将任务指定回提交申请人
		if(task.getTaskDefinitionKey().startsWith(Constants.APPLY_FOR_ADJUSTMENT)){
			if(null != task.getVariable(Constants.CURRENT_USER_KEY))
				task.setAssignee(task.getVariable(Constants.CURRENT_USER_KEY).toString());
				task.removeVariable(Constants.RCN_RESULT);
		}else if (task.getTaskDefinitionKey().startsWith("JieKuan")) {
			List<String> list = new ArrayList<String>();
			list.add("JieKuanZongJianZhuLi");
			list.add("JieKuanZongJian");
			if(userService.getUserIdsByGroupOrOrgID("JieKuanZongJianZhuLi", "").size()==0 
					&& userService.getUserIdsByGroupOrOrgID("JieKuanZongJian", "").size()==0){
				
				String result = Constants.TASK_COMMIT_RESULT;
				//获取task节点的formKeyJson获取通过表达式的值
				if(StringUtils.isNotBlank(task.getFormKey()) && task.getFormKey().indexOf("?") > 0){
					WorkFlowTasksModel taskModel = new WorkFlowTasksModel();
					taskModel.setTaskID(task.getId());
					taskModel.setFormKey(task.getFormKey());
					result = workFlowTaskService.getResultByFormKey(taskModel,task.getVariable(Constants.CURRENT_USER_KEY).toString());
				}
				task.setVariable(Constants.RCN_RESULT, result);//设置跳转流程变量
			}else{
				task.removeVariable(Constants.RCN_RESULT);//移除跳转流程变量
			}
			task.addCandidateGroups(list);
			
		}
		else{
			setTaskRoleCodeByTask(task);
		}
	}
}
