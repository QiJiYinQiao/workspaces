package com.bpms.listener.loan.ipc;

import java.text.MessageFormat;

import javax.mail.internet.MimeMessage;

import org.activiti.engine.HistoryService;
import org.activiti.engine.delegate.DelegateExecution;
import org.activiti.engine.delegate.ExecutionListener;
import org.activiti.engine.history.HistoricTaskInstance;
import org.apache.commons.lang3.StringUtils;
import org.springframework.web.context.ContextLoader;
import org.springframework.web.context.WebApplicationContext;

import com.bpms.model.LoanOrder;
import com.bpms.model.Organization;
import com.bpms.model.Users;
import com.bpms.service.LoanOrderService;
import com.bpms.service.OrganizationService;
import com.bpms.service.UserService;
import com.bpms.util.DateUtils;
import com.bpms.util.SendEmailUtil;
/**
 * 发送拒贷邮件提示信息
 * @author liuhh
 *
 */
@SuppressWarnings("serial")
public class LoanIPCSendEmailExecutionListener implements ExecutionListener {

	@Override
	public void notify(DelegateExecution execution) throws Exception {
		// 得到上下文环境
		WebApplicationContext cx = ContextLoader.getCurrentWebApplicationContext();
		LoanOrderService loanOrderService = (LoanOrderService) cx.getBean("loanOrderService");
		UserService userService = (UserService) cx.getBean("userService");
		HistoryService historyService = (HistoryService) cx	.getBean("historyService");
		OrganizationService organizationService = (OrganizationService) cx.getBean("organizationService");
		HistoricTaskInstance hTask = historyService	.createHistoricTaskInstanceQuery().processInstanceId(execution.getProcessInstanceId()).taskDefinitionKey("IPCData").singleResult();

		// 获取对应的申请订单的ID
		String id = "";
		if (StringUtils.isNotBlank(execution.getProcessBusinessKey())) {
			id = execution.getProcessBusinessKey().split("\\.")[1];
		}

		// 根据订单的id获取订单的信息
		LoanOrder order = loanOrderService.findLoanOrderById(id);
		Organization organization = organizationService.findOrganizationById(order.getOrganizationId());

		// 获取用户的邮箱
		Users user = userService.findUserById(Integer.valueOf(hTask.getAssignee()));

		// 然后拒绝的通知：所在分公司，时间，客户姓名，客户经理，团队经理。拒绝理由：简版
		StringBuffer message = new StringBuffer();
		message.append("<h1>{0}</h1>");
		message.append("<strong>时间：{1}</strong>");
		message.append("<content>");
		message.append("	<p>客户姓名{2}，客户经理{3}团队经理{4}，申请被拒绝。</p>");
		message.append("	<p>拒绝理由：{5}</p>");
		message.append("</content>");
		
		//	发送邮件提示信息
		if (null != user) {
			String messageFormat = MessageFormat.format(message.toString(),
					organization.getFullName(),
					DateUtils.getNowTime(DateUtils.DATE_SMALL_STR),
					order.getName(), order.getSalesMan(), order.getSalesMan(),
					execution.getVariables().get("mailMessage"));
			MimeMessage mimeMessage = SendEmailUtil.createTextMail(organization.getFullName(), messageFormat, user.getEmail());
			SendEmailUtil.sendEmail(mimeMessage);
		}

	}
}
