package com.bpms.action;

import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.springframework.beans.factory.annotation.Autowired;

import com.bpms.model.LoanCustRepaymentDetail;
import com.bpms.model.vo.CustomerRepaymentInfoModel;
import com.bpms.model.vo.LoanCustRepaymentDetailModel;
import com.bpms.service.CommonService;
import com.bpms.service.LoanCustRepaymentDetailService;
import com.bpms.service.UserService;
import com.bpms.shiro.ShiroUser;
import com.bpms.util.Collections;
import com.bpms.util.Constants;
import com.bpms.util.PageUtil;
import com.bpms.view.model.DataModel;
import com.bpms.view.model.GridModel;
import com.opensymphony.xwork2.ModelDriven;

/**
 * 客户贷款信息详情控制器
 * @author Sun
 *
 */
@Namespace("/loanCustRepaymentDetail")
@Action(value = "loanCustRepaymentDetailAction")
public class LoanCustRepaymentDetailAction extends BaseAction implements ModelDriven<LoanCustRepaymentDetail>{

	private static final long serialVersionUID = -8874867334416868041L;
	private LoanCustRepaymentDetail loanCustRepaymentDetail = new LoanCustRepaymentDetail();
	
	@Autowired
	private LoanCustRepaymentDetailService loanCustRepaymentDetailService;

	@Autowired
	private CommonService commonService;
	
	@Autowired
	private UserService userService;
	
	@Override
	public LoanCustRepaymentDetail getModel() {
		return loanCustRepaymentDetail;
	}
	
	private String organizationId;
	private String loanName;
	private String contractSignDateS;
	private String contractSignDateE;
	private String repaymentBgDate;
	private String repayAmt;//还款金额
	private String isOverdue;//是否逾期 0:全部  1:未逾期 2:逾期
	private String repaymentType;//还款类型： 0 本期，1逾期
	private String rdIdlist;//批量还款的信息ID

	public void findLoanCustRepaymentDetail(){
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("organizationId", organizationId);
		map.put("loanName", loanName);
		map.put("contractNo", loanCustRepaymentDetail.getContractNo());
		map.put("contractSignDateS", contractSignDateS);
		map.put("contractSignDateE", contractSignDateE);
		map.put("repaymentBgDate", repaymentBgDate);
		map.put("isOverdue", isOverdue);
		List<CustomerRepaymentInfoModel> list = loanCustRepaymentDetailService.findLoanCustRepaymentDetail(map, new PageUtil(page,rows));
		GridModel gridModel = new GridModel();
		gridModel.setRows(list);
		gridModel.setTotal(loanCustRepaymentDetailService.getCountoFLoanCustRepaymentDetail(map));
		OutputJson2(gridModel);
	}
	
	public void findRepaymentDetailByCno(){
		GridModel gridModel = new GridModel();
		Map<String,Object> map = new HashMap<String,Object>();
		map.put("contractNo",loanCustRepaymentDetail.getContractNo());
		map.put("overdueDays", loanCustRepaymentDetail.getOverdueDays());
		List<LoanCustRepaymentDetail> list = loanCustRepaymentDetailService.findRepaymentDetailByCno(map, new PageUtil(page,rows));
		List<LoanCustRepaymentDetailModel> lists = new ArrayList<LoanCustRepaymentDetailModel>();
		if(Collections.listIsNotEmpty(list)){
			for(LoanCustRepaymentDetail lcr: list){
				LoanCustRepaymentDetailModel lcrdm = new LoanCustRepaymentDetailModel();
				try {
					PropertyUtils.copyProperties(lcrdm, lcr);
				} catch (IllegalAccessException | InvocationTargetException
						| NoSuchMethodException e) {
					e.printStackTrace();
				}
				//待还金额=应还金额-实际还款金额
				lcrdm.setNeedPay(lcrdm.getPlanRepmtAmt().subtract(lcrdm.getRealRepmtAmt()));
//				lcrdm.setRpmtStatusName(commonService.findDictName("repmt_status", lcr.getRpmtStatus()));
				Long start = lcrdm.getPlanRepmtDate().getTime();
				Long now = System.currentTimeMillis();
				Integer days = 0;
				if(now > start){
					days = (int) ((now - start)/1000/60/60/24);
					if(days==0){
						days = 1;
					}
					lcrdm.setLateFee(lcrdm.getPlanRepmtAmt().multiply(new BigDecimal(0.1)));
					lcrdm.setDefaultInterest(lcrdm.getPlanRepmtAmt().multiply(new BigDecimal(0.0005)).multiply(new BigDecimal(lcrdm.getPeriods())).multiply(new BigDecimal(days)).subtract(lcrdm.getFreeInterestFee()));
				}
				
				lcrdm.setOverdueDays(days);//逾期天数
				lists.add(lcrdm);
			}
		}
		gridModel.setRows(lists);
		gridModel.setTotal(loanCustRepaymentDetailService.getCountRepaymentDetail(map));
		OutputJson2(gridModel);
	}
	
	public void  exportLoanCustRepaymentDetail(){
		try {
			this.loanCustRepaymentDetailService.exportLoanCustRepaymentDetail();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	//还款
	public void repaymentSave(){
		LoanCustRepaymentDetail lcrd = loanCustRepaymentDetailService.findCustRepaymentDeatilById(loanCustRepaymentDetail.getRdId());
		lcrd.setRpmtStatus("1");
		if("0".equals(repaymentType)){
			//本期还款,直接清算
			lcrd.setRealRepmtAmt(loanCustRepaymentDetail.getRealRepmtAmt());
			lcrd.setRpmtStatus("2");
		}else{
			//逾期还款
			//还款账号
			lcrd.setRepmtAct(loanCustRepaymentDetail.getRepmtAct());
			//还款金额
			BigDecimal repayAmts = new BigDecimal(repayAmt);
			lcrd.setRealRepmtAmt(lcrd.getRealRepmtAmt().add(repayAmts));
			lcrd.setRealRepmtDate(new Date());
			
			if(lcrd.getRealRepmtAmt().subtract(lcrd.getPlanRepmtAmt()).doubleValue()>=0){
				lcrd.setRpmtStatus("2");
			}
			if(lcrd.getPlanRepmtDate().before(new Date())){
				lcrd.setRpmtStatus("3");
			}
			
		}
		Boolean b = loanCustRepaymentDetailService.persistenceLoanCustRepaymentDetail(lcrd);
		String msg = "还款失败";
		if(b){
			msg = "还款成功";
		}
		OutputJson(new DataModel("还款详情", msg, b, lcrd));
	}
	
	/**
	 * 查询当期还款详情
	 */
	public void findCurrentPeriodCustRepaymentDetails() {
		OutputJson2(this.loanCustRepaymentDetailService
				.findCustRepaymentDetails(null, new PageUtil(0, 0)));
	}

	/**
	 * 查询逾期还款详情
	 */
	public void findOverduePeriodCustRepaymentDetails() {
		OutputJson2(this.loanCustRepaymentDetailService
				.findCustRepaymentDetails(null, new PageUtil(0, 0)));
	}
	
	//免息
	public void freeInterestFeeSave(){
		LoanCustRepaymentDetail lcrd = loanCustRepaymentDetailService.findCustRepaymentDeatilById(loanCustRepaymentDetail.getRdId());
		lcrd.setFreeInterestFee(lcrd.getFreeInterestFee().add(loanCustRepaymentDetail.getFreeInterestFee()));
		//lcrd.setDefaultInterest(lcrd.getDefaultInterest().subtract(loanCustRepaymentDetail.getFreeInterestFee()));
		Boolean b = loanCustRepaymentDetailService.persistenceLoanCustRepaymentDetail(lcrd);
		String msg = "免息失败";
		if(b){
			msg = "免息成功";
		}
		OutputJson(new DataModel("免息详情", msg, b, lcrd));
	}
	
	/**
	 * 批量还款
	 * @return
	 */
	public void batchCurrentRepay(){
		String[] rdIdlists = rdIdlist.split(",");
		LoanCustRepaymentDetail lcrd = null;
		for(int i = 0 ; i < rdIdlists.length; i++){
			lcrd = loanCustRepaymentDetailService.findCustRepaymentDeatilById(rdIdlists[i]);
			if(null!=lcrd){
				lcrd.setRealRepmtAmt(lcrd.getPlanRepmtAmt());
			}
			loanCustRepaymentDetailService.persistenceLoanCustRepaymentDetail(lcrd);
		}
		OutputJson(new DataModel("还款详情", "还款成功", true));
	}
	
	
	public LoanCustRepaymentDetail getLoanCustRepaymentDetail() {
		return loanCustRepaymentDetail;
	}
	public void setLoanCustRepaymentDetail(
			LoanCustRepaymentDetail loanCustRepaymentDetail) {
		this.loanCustRepaymentDetail = loanCustRepaymentDetail;
	}
	public String getOrganizationId() {
		return organizationId;
	}


	public void setOrganizationId(String organizationId) {
		this.organizationId = organizationId;
	}


	public String getLoanName() {
		return loanName;
	}


	public void setLoanName(String loanName) {
		this.loanName = loanName;
	}


	public String getContractSignDateS() {
		return contractSignDateS;
	}


	public void setContractSignDateS(String contractSignDateS) {
		this.contractSignDateS = contractSignDateS;
	}


	public String getContractSignDateE() {
		return contractSignDateE;
	}


	public void setContractSignDateE(String contractSignDateE) {
		this.contractSignDateE = contractSignDateE;
	}


	public String getRepaymentBgDate() {
		return repaymentBgDate;
	}


	public void setRepaymentBgDate(String repaymentBgDate) {
		this.repaymentBgDate = repaymentBgDate;
	}

	public String getRepayAmt() {
		return repayAmt;
	}

	public void setRepayAmt(String repayAmt) {
		this.repayAmt = repayAmt;
	}

	public String getIsOverdue() {
		return isOverdue;
	}

	public void setIsOverdue(String isOverdue) {
		this.isOverdue = isOverdue;
	}

	public String getRepaymentType() {
		return repaymentType;
	}

	public void setRepaymentType(String repaymentType) {
		this.repaymentType = repaymentType;
	}

	public String getRdIdlist() {
		return rdIdlist;
	}

	public void setRdIdlist(String rdIdlist) {
		this.rdIdlist = rdIdlist;
	}
	
	
}
