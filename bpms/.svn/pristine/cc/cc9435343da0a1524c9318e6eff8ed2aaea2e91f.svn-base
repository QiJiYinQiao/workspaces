package com.bpms.action;

import java.io.OutputStream;
import java.math.BigDecimal;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.springframework.beans.factory.annotation.Autowired;

import com.bpms.model.vo.InvestorAndInvestProductModel;
import com.bpms.service.InvestorSupervisionService;
import com.bpms.util.Collections;
import com.bpms.util.PageUtil;
import com.bpms.util.ReadExcel;
import com.bpms.view.model.GridModel;
import com.opensymphony.xwork2.ModelDriven;

/**
 * @ClassName: InvestOrderAction 
 * @Description: 投资客户监管Action 	
 * @author ZHANGJIAN    
 * @date 2015年8月05日 上午21:00:00
 */
@Namespace("/investorSupervision")
@Action(value = "investorSupervisionAction")
public class InvestorSupervisionAction extends BaseAction implements
		ModelDriven<InvestorAndInvestProductModel> {
	private static final long serialVersionUID = 6890862335576892873L;
	private InvestorAndInvestProductModel model = new InvestorAndInvestProductModel();
	@Autowired     
	private InvestorSupervisionService investorSupervisionService;   //投资客户监管Service 		
	
	/**
	 * 获取 “到期客户明细” 信息。
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public String findDueInvestorInfoDetails(){
		//分页信息
		PageUtil pageUtil = new PageUtil(page,rows);
	    GridModel gridModel = new GridModel();
	    Object[] resultArray = investorSupervisionService.findDueInvestorInfoDetails(pageUtil, this.model);
	    gridModel.setRows((List<InvestorAndInvestProductModel>)resultArray[0]);
	    gridModel.setTotal((Long)resultArray[1]);
		this.OutputJson2(gridModel);
		return null;
	}
	/**
	 * @Title: doExportExcel 
	 * @Description: TODO 到期客户明细excel
	 * @param @return
	 * @return String
	 * @throws
	 */
	@SuppressWarnings("null")
	public String doExportExcel(){
		try {
			if(StringUtils.isNotBlank(model.getInvestorName())){
				model.setInvestorName(java.net.URLDecoder.decode(model.getInvestorName(),"UTF-8"));
			}
			HttpServletResponse response = ServletActionContext.getResponse();
			List<InvestorAndInvestProductModel> modelList = investorSupervisionService.toExportExcelFindAllList(model);
			String srcXlsxPath = ServletActionContext.getServletContext().getRealPath("/excel")+"\\合同到期客户明细报表.xlsx";//模板路径
			Calendar nowDate = Calendar.getInstance(); //获取当前时间
			Integer year = nowDate.get(Calendar.YEAR);
			Integer month = nowDate.get(Calendar.MONTH) + 1;
			String title = "钱钱金融财富中心"+year+"年"+month+"合同到期客户明细报表";
			Workbook workbook  = ReadExcel.openExcleFile(srcXlsxPath);//获取工作簿
			Sheet sheet = workbook.getSheetAt(0);//获取页签
			Row row = sheet.getRow(0);//获取第一行
			Cell cell = row.getCell(0);
			cell.setCellValue(title);//设置标题
			Row row2 = sheet.getRow(2);//获取第三行
			Cell cell0 = row2.getCell(0);
			String stringCellValue = cell0.getStringCellValue();
			String format = MessageFormat.format(stringCellValue,new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
			cell0.setCellValue(format);
			BigDecimal countbenjing = new BigDecimal(0);
			BigDecimal countlixi = new BigDecimal(0);
			BigDecimal countbenxi = new BigDecimal(0);
			if(Collections.listIsNotEmpty(modelList)){
				for (int i = 0; i < modelList.size(); i++) {
					//第一行不用copy
					if(i!=0){
						ReadExcel.copyRows(sheet,5,5,4+i);
					}
					InvestorAndInvestProductModel im = modelList.get(i);
					Row rowx = sheet.getRow(4+i);
					rowx.getCell(0).setCellValue(i+1);
					rowx.getCell(1).setCellValue(im.getContractNo());
					rowx.getCell(2).setCellValue(im.getInvestorName());
					rowx.getCell(3).setCellValue(im.getIdCrad());
					rowx.getCell(4).setCellValue(im.getMobTel());
					rowx.getCell(5).setCellValue(im.getBankName());
					rowx.getCell(6).setCellValue(im.getActNo());
					rowx.getCell(7).setCellValue(im.getProdName());
					rowx.getCell(8).setCellValue(String.valueOf(im.getInvestEdu()));
					rowx.getCell(9).setCellValue(String.valueOf(im.getTotalInterest()));//应付利息
					rowx.getCell(10).setCellValue(String.valueOf(im.getTotalAmountDue()));//应付本息
					rowx.getCell(11).setCellValue(im.getInterestDate());
					rowx.getCell(12).setCellValue(im.getEndDate());
					
					countbenjing = countbenjing.add(im.getInvestEdu());
					countlixi = countlixi.add(im.getTotalInterest());
					countbenxi = countbenxi.add(im.getTotalAmountDue());
				}
				//添加合计行
				ReadExcel.copyRows(sheet,5,5,4+modelList.size());
				Row rowlast = sheet.getRow(4+modelList.size());
				rowlast.getCell(0).setCellValue("合计");
				rowlast.getCell(1).setCellValue("/");
				rowlast.getCell(2).setCellValue("/");
				rowlast.getCell(3).setCellValue("/");
				rowlast.getCell(4).setCellValue("/");
				rowlast.getCell(5).setCellValue("/");
				rowlast.getCell(6).setCellValue("/");
				rowlast.getCell(7).setCellValue("/");
				rowlast.getCell(8).setCellValue(String.valueOf(countbenjing));
				rowlast.getCell(9).setCellValue(String.valueOf(countlixi));//应付利息
				rowlast.getCell(10).setCellValue(String.valueOf(countbenxi));//应付本息
				rowlast.getCell(11).setCellValue("/");
				rowlast.getCell(12).setCellValue("/");
			}
			response.setHeader("Content-disposition", "attachment;filename="+new String((title+".xlsx").getBytes("gb2312"),"iso8859-1"));
			OutputStream ouputStream = response.getOutputStream(); 
			workbook.write(ouputStream);
			ouputStream.flush();
			ouputStream.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * 获取 “返息客户” 详细信息。
	 * @return
	 */
	@SuppressWarnings("unchecked")	
	public String findReturnInterestInvestorInfoDetails(){		
		//分页信息
		PageUtil pageUtil = new PageUtil(page,rows);
	    GridModel gridModel = new GridModel();
	    Object[] resultArray = investorSupervisionService.findReturnInterestInvestorInfoDetails(pageUtil, this.model);
	    gridModel.setRows((List<InvestorAndInvestProductModel>)resultArray[0]);
	    gridModel.setTotal((Long)resultArray[1]);
		this.OutputJson2(gridModel);
		return null;				
	}
	/**
	 * @Title: doExportExcelTwo 
	 * @Description: TODO 返息客户导出excel
	 * @param @return
	 * @return String
	 * @throws
	 */
	public String doExportExcelTwo(){
		try {
			if(StringUtils.isNotBlank(model.getInvestorName())){
				model.setInvestorName(java.net.URLDecoder.decode(model.getInvestorName(),"UTF-8"));//传中文乱码
			}
			HttpServletResponse response = ServletActionContext.getResponse();
			List<InvestorAndInvestProductModel> modelList = investorSupervisionService.toExportExcelFindAllData(model);
			String srcXlsxPath = ServletActionContext.getServletContext().getRealPath("/excel")+"\\返息客户明细报表模板.xlsx";//模板路径
			Calendar nowDate = Calendar.getInstance(); //获取当前时间
			Integer year = nowDate.get(Calendar.YEAR);
			Integer month = nowDate.get(Calendar.MONTH) + 1;
			if(StringUtils.isNotBlank(model.getRtnInterestMonSelect()) && StringUtils.isNotBlank(model.getRtnInterestYearSelect())){
				year = Integer.valueOf(model.getRtnInterestYearSelect());
				month = Integer.valueOf(model.getRtnInterestMonSelect())+1;
			}
			String title = "钱钱金融财富中心"+year+"年"+month+"返息客户明细报表";
			Workbook workbook  = ReadExcel.openExcleFile(srcXlsxPath);//获取工作簿
			Sheet sheet = workbook.getSheetAt(0);//获取页签
			Row row = sheet.getRow(0);//获取第一行
			Cell cell = row.getCell(0);
			cell.setCellValue(title);//设置标题
			Row row2 = sheet.getRow(2);//获取第三行
			Cell cell0 = row2.getCell(0);
			String stringCellValue = cell0.getStringCellValue();
			String format = MessageFormat.format(stringCellValue,new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
			cell0.setCellValue(format);
			BigDecimal countbenjing = new BigDecimal(0);
			BigDecimal countlixizonge = new BigDecimal(0);
			BigDecimal countyuefulixi = new BigDecimal(0);
			if(Collections.listIsNotEmpty(modelList)){
				for (int i = 0; i < modelList.size(); i++) {
					//第一行不用copy
					if(i!=0){
						ReadExcel.copyRows(sheet,5,5,4+i);
					}
					InvestorAndInvestProductModel im = modelList.get(i);
					Row rowx = sheet.getRow(4+i);
					rowx.getCell(0).setCellValue(i+1);
					rowx.getCell(1).setCellValue(im.getContractNo());
					rowx.getCell(2).setCellValue(im.getInvestorName());
					rowx.getCell(3).setCellValue(im.getIdCrad());
					rowx.getCell(4).setCellValue(im.getMobTel());
					rowx.getCell(5).setCellValue(im.getBankName());
					rowx.getCell(6).setCellValue(im.getActNo());
					rowx.getCell(7).setCellValue(im.getProdName());
					rowx.getCell(8).setCellValue(String.valueOf(im.getInvestEdu()));
					rowx.getCell(9).setCellValue(String.valueOf(im.getLendingCycle()));//理财天数
					rowx.getCell(10).setCellValue(String.valueOf(im.getArs()));//年化收益率
					rowx.getCell(11).setCellValue(String.valueOf(im.getTotalInterest()));//利息总额
					rowx.getCell(12).setCellValue(String.valueOf(im.getInterestPerMonth()));//月付利息
					rowx.getCell(13).setCellValue(String.valueOf(im.getDaysToPayInterestCurMonth()));//计息天数
					rowx.getCell(14).setCellValue(new SimpleDateFormat("yyyy-MM-dd").format(im.getInterestDate()));//计息日期
					rowx.getCell(15).setCellValue(new SimpleDateFormat("yyyy-MM-dd").format(im.getEndDate()));//到期日期
					countbenjing = countbenjing.add(im.getInvestEdu());
					countlixizonge = countlixizonge.add(im.getTotalInterest());
					countyuefulixi = countyuefulixi.add(im.getInterestPerMonth());
				}
				//添加合计行
				ReadExcel.copyRows(sheet,5,5,4+modelList.size());
				Row rowlast = sheet.getRow(4+modelList.size());
				rowlast.getCell(0).setCellValue("合计");
				rowlast.getCell(1).setCellValue("/");
				rowlast.getCell(2).setCellValue("/");
				rowlast.getCell(3).setCellValue("/");
				rowlast.getCell(4).setCellValue("/");
				rowlast.getCell(5).setCellValue("/");
				rowlast.getCell(6).setCellValue("/");
				rowlast.getCell(7).setCellValue("/");
				rowlast.getCell(8).setCellValue(String.valueOf(countbenjing));
				rowlast.getCell(9).setCellValue("/");//理财天数
				rowlast.getCell(10).setCellValue("/");//年化收益率
				rowlast.getCell(11).setCellValue(String.valueOf(countlixizonge));//利息总额
				rowlast.getCell(12).setCellValue(String.valueOf(countyuefulixi));//月付利息
				rowlast.getCell(13).setCellValue(String.valueOf("/"));//计息天数
				rowlast.getCell(14).setCellValue("/");//计息日期
				rowlast.getCell(15).setCellValue("/");//到期日期
			}
			response.setHeader("Content-disposition", "attachment;filename="+new String((title+".xlsx").getBytes("gb2312"),"iso8859-1"));
			OutputStream ouputStream = response.getOutputStream(); 
			workbook.write(ouputStream);
			ouputStream.flush();
			ouputStream.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	public InvestorAndInvestProductModel getModel() {
		return this.model;
	}	
	
	public void setModel(InvestorAndInvestProductModel model) {
		this.model = model;
	}

}
