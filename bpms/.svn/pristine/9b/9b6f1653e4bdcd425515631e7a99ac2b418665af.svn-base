package com.bpms.action;

import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.MathContext;
import java.net.URLEncoder;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.IOUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.springframework.beans.factory.annotation.Autowired;

import com.bpms.model.AccountInfo;
import com.bpms.model.FinalAuditReport;
import com.bpms.model.LoanContract;
import com.bpms.model.LoanOrder;
import com.bpms.model.MicrocreditOpinion;
import com.bpms.model.Organization;
import com.bpms.model.Users;
import com.bpms.model.vo.LoanerJointModel;
import com.bpms.service.AccountInfoService;
import com.bpms.service.AddressService;
import com.bpms.service.CommonService;
import com.bpms.service.FinalAuditReportService;
import com.bpms.service.LoanContractService;
import com.bpms.service.LoanOrderService;
import com.bpms.service.LoanerJointService;
import com.bpms.service.MicrocreditOpinionService;
import com.bpms.service.OrganizationService;
import com.bpms.service.UserService;
import com.bpms.util.WordGeneratorUtil;
import com.bpms.view.model.DataModel;
import com.opensymphony.xwork2.ModelDriven;

/**
 * 合同 控制器
 */
@Namespace("/loanContract")
@Action(value = "loanContractAction")
public class LoanContractAction extends BaseAction implements ModelDriven<LoanContract>{
	private static final long serialVersionUID = 6361458777773218094L;
	
	@Autowired
	private LoanContractService loanContractService;
	@Autowired
	private LoanerJointService loanerJointService;
	@Autowired
	private FinalAuditReportService finalAuditReportService;
	@Autowired
	private MicrocreditOpinionService microcreditOpinionService;
	@Autowired
	private CommonService commonService;
	@Autowired
	private AccountInfoService accountInfoService;
	@Autowired
	private AddressService addressService;
	@Autowired
	private OrganizationService organizationService;
	@Autowired
	private UserService userService;
	@Autowired
	private LoanOrderService loanOrderService;
	
	private LoanContract loanContract = new LoanContract();

	@Override
	public LoanContract getModel() {
		return loanContract;
	}

	public void saveLoanContract(){
		LoanOrder loanOrder = loanOrderService.findLoanOrderById(loanContract.getLoanOrderId());
		loanContract.setLoanOrderId(loanOrder.getLoanOrderId());
		if(StringUtils.isBlank(loanContract.getLcId())){
			String contractNo = createContractNo(loanOrder);
			loanContract.setContractNo(contractNo);
		}
		loanContract.setLoaner(loanOrder.getName());
		loanContract.setLoanerIdno(loanOrder.getIdNo());
		String loanerPostalAddr = addressService.addressName(loanOrder.getCurAddr());
		loanContract.setLoanerPostalAddr(loanerPostalAddr);
		loanContract.setLoanerTel(loanOrder.getMobileTel());
		loanContract.setLoanerSignDate(new Date());
		LoanerJointModel loanerJoint = loanerJointService.findLoanerJointByOrderId(loanOrder.getLoanOrderId());
		if(null!=loanerJoint){
			loanContract.setLoanerJoint(loanerJoint.getName());
			loanContract.setLjIdno(loanerJoint.getIdNo());
			String ljPostalAddr = addressService.addressName(loanerJoint.getCurAddr());
			loanContract.setLjPostalAddr(ljPostalAddr);
			loanContract.setLjTel(loanerJoint.getMobileTel());
		}
		loanContract.setLender("于德建");
		loanContract.setLenderIdno("131126197912150054");
		loanContract.setLenderSignDate(new Date());
		loanContract.setPurpose(loanOrder.getPurpose());
		Integer loanPeriods = 6;
		FinalAuditReport finalAuditReport = finalAuditReportService.findFinalAuditReportByLoanOrderId(loanOrder.getLoanOrderId());
		if(null!=finalAuditReport){
			loanContract.setLoanEdu(finalAuditReport.getContractLoanAmount());
			loanPeriods = Integer.parseInt(commonService.findDictName("loan_period_type", finalAuditReport.getLoanPeriodType()));
		}else{
			MicrocreditOpinion microcreditOpinion = microcreditOpinionService.findMicrocreditOpinionByOid(loanOrder.getLoanOrderId());
			loanContract.setLoanEdu(microcreditOpinion.getFinalLoanAmt());
			loanPeriods = Integer.parseInt(commonService.findDictName("loan_period_type", microcreditOpinion.getFinalLoanPeriod()));
		}
		loanContract.setLoanPeriods(loanPeriods);
		BigDecimal loanEdu = loanContract.getLoanEdu();
		loanContract.setMonthlyRate(new BigDecimal(0.01));
		loanContract.setLoanInterest(new BigDecimal(0.01).multiply(loanEdu));
		BigDecimal monthlyRepayment = loanEdu.divide(new BigDecimal(loanContract.getLoanPeriods()),4,BigDecimal.ROUND_HALF_EVEN)
											 .add(loanEdu.multiply(loanContract.getMonthlyRate(),MathContext.DECIMAL64));
		loanContract.setMonthlyRepayment(monthlyRepayment);
		loanContract.setLoanBgDate(new Date());
		List<AccountInfo> accountList = accountInfoService.findListByLoanerId(loanOrder.getLoanerId());
		if(null!=accountList && accountList.size()>0){
			AccountInfo account = accountList.get(0);
			loanContract.setLoanerBankName(account.getBankName());
			loanContract.setLoanerActName(account.getAccountName());
			loanContract.setLoanerActNum(account.getAccountNum());
		}
		loanContract.setMonthlyRepaymentDate(30);
		boolean b = loanContractService.saveLoanContract(loanContract);
		String msg = "";
		if(b){
			msg = "保存成功";
		}else{
			msg = "保存失败";
		}
		OutputJson(new DataModel("", msg, b), "text/html");
	}
	
	public void findLoanContract(){
		OutputJson(loanContractService.findLoanContract(loanContract.getLcId()));
	}
	
	public void downloadContract(){
		try {
			LoanContract contract = loanContractService.findLoanContractByLoanOrderId(loanContract.getLoanOrderId());
			if(contract!=null){
				contract.exportDocDataHanding();
				File file =WordGeneratorUtil.createDoc(contract, "/temp/loan/借款协议模板.ftl");
				// 设置头文件
				ServletActionContext.getResponse().setHeader(
						"Content-disposition",
						"attachment;filename="
								+ URLEncoder.encode(contract.getContractNo()+".doc", "utf-8"));
				// 写入流中
				IOUtils.write(FileUtils.readFileToByteArray(file), ServletActionContext
							.getResponse().getOutputStream());
				// 删除文件
				if(file.exists())
					file.delete();
				
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void checkIsContractExist(){
		LoanContract loanCon = loanContractService.findLoanContractByLoanOrderId(loanContract.getLoanOrderId());
		if(null!=loanCon)
			OutputJson(loanCon);
	}
	
	public void completeContract(){
		LoanContract loanCract = loanContractService.findLoanContract(loanContract.getLcId());
		loanCract.setContractSignSite(loanContract.getContractSignSite());
		loanCract.setContractSignDate(loanContract.getContractSignDate());
		loanCract.setLjSignDate(loanContract.getLjSignDate());
		loanCract.setAgent(loanContract.getAgent());
		loanCract.setAgentIdno(loanContract.getAgentIdno());
		loanCract.setAgentSignDate(loanContract.getAgentSignDate());
		loanCract.setMonthlyRepaymentDate(loanContract.getMonthlyRepaymentDate());
		loanCract.setLoanEdDate(loanContract.getLoanEdDate());
		loanCract.setRepaymentBgDate(loanContract.getRepaymentBgDate());
		loanCract.setRepaymentEdDate(loanContract.getRepaymentEdDate());
		loanCract.setRemark(loanContract.getRemark());
		loanCract.setContractNo("1");
		boolean b = loanContractService.saveLoanContract(loanCract);
		String msg = "";
		if(b){
			msg = "保存成功";
		}else{
			msg = "保存失败";
		}
		OutputJson(new DataModel("", msg, b), "text/html");
	}
	
	//生成合同编号
	public String createContractNo(LoanOrder loanOrder){
		String contractNo = "QQJR-LO-";
		String province = "BJ-";
		String city = "BJ-";
		String deptNo = "00-";
		String jinjianNo = "00000000";
		Users user = userService.findUserById(loanOrder.getCreator());
		Organization organization = user.getOrganization();
		String regionType = organization.getRegionType();
		if(StringUtils.isBlank(regionType)){
			deptNo = organization.getMyid()+"-";
			Organization citys = organizationService.findOrganizationById(organization.getPid());
			city = citys.getMyid()+"-";
			Organization provinces = organizationService.findOrganizationById(citys.getPid());
			province = provinces.getMyid()+"-";
		}else if("3".equals(regionType)){
			deptNo = "00-";
			city = organization.getMyid()+"-";
			Organization oga = organizationService.findOrganizationById(organization.getPid());
			province = oga.getMyid()+"-";
		}else if("2".equals("regionType")){
			
		}else if("1".equals(regionType)){
			deptNo = "00-";
			province = organization.getMyid()+"-";
			city = organization.getMyid()+"-";
		}
		jinjianNo = loanContractService.findJinJianNo(contractNo+province+city+deptNo);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
		String dataStr = sdf.format(new Date());
		return contractNo+province+city+deptNo+dataStr+jinjianNo;
	}
	
}
