package com.bpms.listener2;

import java.util.ArrayList;
import java.util.List;

import javax.mail.internet.MimeMessage;

import org.activiti.engine.HistoryService;
import org.activiti.engine.delegate.DelegateExecution;
import org.activiti.engine.delegate.ExecutionListener;
import org.activiti.engine.history.HistoricTaskInstance;
import org.activiti.engine.history.HistoricVariableInstance;
import org.springframework.web.context.ContextLoader;
import org.springframework.web.context.WebApplicationContext;

import com.bpms.model.Users;
import com.bpms.service.UserService;
import com.bpms.util.Collections;
import com.bpms.util.Constants;
import com.bpms.util.SendEmailUtil;

@SuppressWarnings("serial")
public class LoanIPCSendEmailExecutionListene implements ExecutionListener {

	@Override
	public void notify(DelegateExecution execution) throws Exception {
		String pid =execution.getProcessInstanceId();
		// 得到上下文环境
		WebApplicationContext cx = ContextLoader.getCurrentWebApplicationContext();
		UserService userService = (UserService) cx.getBean("userService");
		HistoryService historyService = (HistoryService) cx.getBean("historyService");
		HistoricTaskInstance hTask = historyService.createHistoricTaskInstanceQuery().processInstanceId(pid).taskDefinitionKey("IPCData").singleResult();
		HistoricVariableInstance hVariable = historyService.createHistoricVariableInstanceQuery().processInstanceId(pid).variableName(Constants.CURRENT_USER_KEY).singleResult();
		String ipcDataUser = hTask.getAssignee();
		String salesman = (String) hVariable.getValue();
		
		List<String> userIds = new ArrayList<String>();
		userIds.add(salesman);
		userIds.add(ipcDataUser);
		// 获取用户的邮箱
		List<Users> users = userService.findUsersByUserIds(userIds);
		
		if(Collections.listIsNotEmpty(users)){
			for (Users user : users) {
				MimeMessage message = SendEmailUtil.createTextMail("贷款申请已经被拒贷!", "申请的订单已经悲剧掉!!!", user.getEmail());
				SendEmailUtil.sendEmail(message);
			}
		}
		
	}

}
