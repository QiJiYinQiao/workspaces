<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd" default-autowire="byName">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.maien"></context:component-scan>
	<!-- 引入数据库配置文件 -->
	<bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
	</bean>
	<!-- 事务  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 添加Mybatis支持 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- <property name="configLocation" value="classpath:ibatis-config.xml"/> -->
        <!-- 无需配置ibatis-config.xml中的mapper 由spring自动扫描加入 -->
        <property name="mapperLocations" value="classpath:com/maien/model/*.xml"/>
    </bean>
    <!-- Dao接口所在包，spring会自动查找其下的类 注入sqlSessionFactory -->
	<!-- 自动将映射接口转换为bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
        p:basePackage="com.maien.**.dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>
        
        
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
        p:basePackage="com.maien.dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>  -->
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- spring和Mybatis的整合，不需要mybatis的配置映射文件 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>-->
		<!-- 自动扫描mapping.xml文件 
		<property name="mapperLocations" value="classpath:com/maien/model/*.xml"></property>
	</bean>-->
	<!-- Dao接口所在包，spring会自动查找其下的类 注入sqlSessionFactory 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.maien.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>-->
	
	<!-- (事务管 理)transaction manager, use JtaTransactionManager for global tx 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionMana ger">
		<property name="dataSource" ref="dataSource" />
	</bean>-->
	
	
	
</beans>