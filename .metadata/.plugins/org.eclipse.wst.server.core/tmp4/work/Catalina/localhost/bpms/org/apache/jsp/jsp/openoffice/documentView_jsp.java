/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.59
 * Generated at: 2015-09-18 08:01:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.openoffice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class documentView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
	String attId = (String)request.getParameter("attId");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/openoffice/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/openoffice/flexpaper.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/openoffice/flexpaper_handlers.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"> \r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:'POST',\r\n");
      out.write("\t\t\turl:'openOfficeAction/openOfficeAction!openOffice.action',\r\n");
      out.write("\t\t\tdata:{'attachmentId':'");
      out.print(attId);
      out.write("'},\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t$(\"#onlineShow\").empty();\r\n");
      out.write("\t\t\t\t// 文档不存在/转换时异常\r\n");
      out.write("\t\t\t\tif(data && !data.status){\r\n");
      out.write("\t\t\t\t\t$.messager.alert(data.title,data.message,\"error\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 在线预览图片\r\n");
      out.write("\t\t\t\tif(data && data.status && data.data.fileType=='0'){\r\n");
      out.write("\t\t\t\t\timageViewer(data.data.filePath);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 在线支持文档\r\n");
      out.write("\t\t\t\tif(data && data.status && data.data.fileType=='1'){\r\n");
      out.write("\t\t\t\t\tdocumentViewer(data.data.filePath);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 其他类型，不支持在线预览\r\n");
      out.write("\t\t\t\tif(data && data.status && data.data.fileType=='2'){\r\n");
      out.write("\t\t\t\t\totherViewer();\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t// 在线预览文档\r\n");
      out.write("\tfunction documentViewer(filePath){\r\n");
      out.write("\t  $(\"#onlineShow\").append(\"<div id='documentViewer' class='flexpaper_viewer' style='width:1500px;height:1000px'></div>\");\r\n");
      out.write("\t  var startDocument = \"Paper\";\r\n");
      out.write("        $('#documentViewer').FlexPaperViewer(\r\n");
      out.write("               { config : {\r\n");
      out.write("                   SWFFile :escape(filePath),\r\n");
      out.write("                   Scale : 0.6,\r\n");
      out.write("                   ZoomTransition : 'easeOut',\r\n");
      out.write("                   ZoomTime : 0.5,\r\n");
      out.write("                   ZoomInterval : 0.2,\r\n");
      out.write("                   FitPageOnLoad : true,\r\n");
      out.write("                   FitWidthOnLoad : false,\r\n");
      out.write("                   FullScreenAsMaxWindow : false,\r\n");
      out.write("                   ProgressiveLoading : false,\r\n");
      out.write("                   MinZoomSize : 0.2,\r\n");
      out.write("                   MaxZoomSize : 5,\r\n");
      out.write("                   SearchMatchAll : false,\r\n");
      out.write("                   InitViewMode : 'Portrait',\r\n");
      out.write("                   RenderingOrder : 'flash',\r\n");
      out.write("                   StartAtPage : '',\r\n");
      out.write("\r\n");
      out.write("                   ViewModeToolsVisible : true,\r\n");
      out.write("                   ZoomToolsVisible : true,\r\n");
      out.write("                   NavToolsVisible : true,\r\n");
      out.write("                   CursorToolsVisible : true,\r\n");
      out.write("                   SearchToolsVisible : true,\r\n");
      out.write("                   WMode : 'window',\r\n");
      out.write("                   localeChain: 'zh_CN'\r\n");
      out.write("               }}\r\n");
      out.write("        );\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 预览图片\r\n");
      out.write("\tfunction  imageViewer(filePath){\r\n");
      out.write("\t  $(\"#onlineShow\").append(\"<img id='image'>\");\r\n");
      out.write("\t  $(\"#image\").attr(\"src\",filePath);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 其他不支持在线预览的类型\r\n");
      out.write("\tfunction otherViewer(){\r\n");
      out.write("\t\t  $(\"#onlineShow\").append(\"<span><font id='main' size='8' style='font-weight: bold;box-shadow: 3px 3px 5px 3px;position:absolute;'>此类型附件不支持在线预览！！</font></span>\");\r\n");
      out.write("\t\t// 获取浏览器窗口 \r\n");
      out.write("\t\t\tvar windowScreen = document.documentElement; \r\n");
      out.write("\t\t\t// 获取main的font元素 \r\n");
      out.write("\t\t\tvar main_div = document.getElementById(\"main\"); \r\n");
      out.write("\t\t\t// 通过窗口宽高和div宽高计算位置 \r\n");
      out.write("\t\t\tvar main_left = (windowScreen.clientWidth - main_div.clientWidth)/2 + \"px\"; \r\n");
      out.write("\t\t\tvar main_top = (windowScreen.clientHeight - main_div.clientHeight)/2 + \"px\"; \r\n");
      out.write("\t\t\t// 位置赋值 \r\n");
      out.write("\t\t\tmain_div.style.left = main_left; \r\n");
      out.write("\t\t\tmain_div.style.top = main_top; \r\n");
      out.write("\t}\r\n");
      out.write("</script>  \r\n");
      out.write("<style type=\"text/css\" media=\"screen\"> \r\n");
      out.write("\thtml, body\t{ height:100%; }\r\n");
      out.write("\tbody { margin:0; padding:0; overflow:auto; }   \r\n");
      out.write("\t#flashContent { display:none; }\r\n");
      out.write("</style> \r\n");
      out.write("<title>文档在线预览系统</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body> \r\n");
      out.write("\t<div id=\"onlineShow\" style=\"position:absolute;text-align: center;width:100%;height:100%;\" ></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
