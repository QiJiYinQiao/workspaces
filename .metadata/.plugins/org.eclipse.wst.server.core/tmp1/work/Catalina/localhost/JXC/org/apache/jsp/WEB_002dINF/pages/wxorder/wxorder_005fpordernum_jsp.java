/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2015-09-22 07:09:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.wxorder;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class wxorder_005fpordernum_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/E:/workspaces/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/JXC/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1427683825107L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>个人订单量</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../media/css/easyui.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../media/css/icon.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../media/css/demo.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"../media/js/WdatePicker.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"../media/js/jquery.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"../media/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t\tinput{\r\n");
      out.write("\t\t\tborder: 1px solid #95b8e7;border-radius: 5px;height: 20px;background-color: rgb(240,248,255);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttd{\r\n");
      out.write("\t\t\tfont-size: 16px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t .container{\r\n");
      out.write("                position:relative;\r\n");
      out.write("        }\r\n");
      out.write("        table{border-collapse:collapse;border-spacing:0;text-align: center;}\r\n");
      out.write("        td{padding:5px;margin:5px;} \r\n");
      out.write("        table.gridtable {\r\n");
      out.write("\t\t\tfont-size: 18px;\r\n");
      out.write("\t\t\tfont-family: verdana,arial,sans-serif;\r\n");
      out.write("\t\t\tcolor:#333333;\r\n");
      out.write("\t\t\tborder-width: 1px;\r\n");
      out.write("\t\t\tborder-color: #666666;\r\n");
      out.write("\t\t\tborder-collapse: collapse;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttable.gridtable th {\r\n");
      out.write("\t\t\tborder-width: 1px;\r\n");
      out.write("\t\t\tpadding: 8px;\r\n");
      out.write("\t\t\tborder-style: solid;\r\n");
      out.write("\t\t\tborder-color: #666666;\r\n");
      out.write("\t\t\tbackground-color: #dedede;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttable.gridtable td {\r\n");
      out.write("\t\t\tborder-width: 1px;\r\n");
      out.write("\t\t\tpadding: 8px;\r\n");
      out.write("\t\t\tborder-style: solid;\r\n");
      out.write("\t\t\tborder-color: #666666;\r\n");
      out.write("\t\t\tbackground-color: #ffffff;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\t.lightbox{width:300px;background:#FFFFFF;border:1px solid #ccc;line-height:25px; top:20%; left:20%;}\r\n");
      out.write("\t\t.lightbox dt{background:#f4f4f4; padding:5px;}\r\n");
      out.write("\t</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"easyui-layout\" >\r\n");
      out.write("\t<div data-options=\"region:'center',title:'个人订单量'\">\r\n");
      out.write("\t<div class=\"indiv\" style=\"height:100%;width:100%;background-color: #F8F8FF;overflow: hidden;\" >\r\n");
      out.write("\t\t\t<form id=\"managephoto\" action=\"managephoto\" method=\"post\" style=\"float:right;\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>日期:</td><td><input id=\"begindate\" name=\"begindate\" style=\"border: 1px solid #95b8e7;border-radius: 5px;height: 20px;width: 100px;\" class=\"Wdate\" onFocus=\"WdatePicker({doubleCalendar:true,dateFmt:'yyyy/MM/dd',maxDate:'#F{$dp.$D(\\'enddate\\')}'})\" type=\"text\"></input></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>--</td><td><input id=\"enddate\" name=\"enddate\" style=\"border: 1px solid #95b8e7;border-radius: 5px;height: 20px;width: 100px;\" class=\"Wdate\" onFocus=\"WdatePicker({doubleCalendar:true,dateFmt:'yyyy/MM/dd',minDate:'#F{$dp.$D(\\'begindate\\')}'})\" type=\"text\"></input></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a onclick=\"querys();\" class=\"easyui-linkbutton\" iconCls=\"icon-search\" style=\"font-size:16px;float: right;\" >查询</a></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t<table id=\"tableinput\" class=\"gridtable\" cellpadding=\"12\" align=\"center\" width=\"100%\">\r\n");
      out.write("\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${str }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t\t\t</table>\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\tfunction querys(){\r\n");
      out.write("\t\t\t\t\tvar begindate = $(\"#begindate\").val();\r\n");
      out.write("\t\t\t\t\tvar enddate = $(\"#enddate\").val();\r\n");
      out.write("\t\t\t\t\tjQuery.ajax({\r\n");
      out.write("\t\t\t\t\t\turl:\"pordernumstr\",\r\n");
      out.write("\t\t\t\t\t\ttype:\"post\",\r\n");
      out.write("\t\t\t\t\t\tdata:{begindate:begindate,enddate:enddate},\r\n");
      out.write("\t\t\t\t\t\terror:function(){},\r\n");
      out.write("\t\t\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#tableinput\").empty();\r\n");
      out.write("\t\t\t\t\t\t\tdata = $.parseJSON(data);\r\n");
      out.write("\t\t\t\t\t\t\t//alert(data);\r\n");
      out.write("\t\t\t\t\t\t\tvar topss = \"''\"+data+\"'\";\r\n");
      out.write("\t\t\t\t\t\t\t//$(\"#tableinput\").append(tops);\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#tableinput\").append(topss);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t$(function(){\r\n");
      out.write("\t\t\t\tDate.prototype.pattern=function(fmt) {        \r\n");
      out.write("\t\t\t\t    var o = {        \r\n");
      out.write("\t\t\t\t    \"M+\" : this.getMonth()+1, //月份        \r\n");
      out.write("\t\t\t\t    \"d+\" : this.getDate(), //日        \r\n");
      out.write("\t\t\t\t    \"h+\" : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时        \r\n");
      out.write("\t\t\t\t    \"H+\" : this.getHours(), //小时        \r\n");
      out.write("\t\t\t\t    \"m+\" : this.getMinutes(), //分        \r\n");
      out.write("\t\t\t\t    \"s+\" : this.getSeconds(), //秒        \r\n");
      out.write("\t\t\t\t    \"q+\" : Math.floor((this.getMonth()+3)/3), //季度        \r\n");
      out.write("\t\t\t\t    \"S\" : this.getMilliseconds() //毫秒        \r\n");
      out.write("\t\t\t\t    };        \r\n");
      out.write("\t\t\t\t    var week = {        \r\n");
      out.write("\t\t\t\t    \"0\" : \"\\日\",        \r\n");
      out.write("\t\t\t\t    \"1\" : \"\\一\",        \r\n");
      out.write("\t\t\t\t    \"2\" : \"\\二\",        \r\n");
      out.write("\t\t\t\t    \"3\" : \"\\三\",        \r\n");
      out.write("\t\t\t\t    \"4\" : \"\\四\",        \r\n");
      out.write("\t\t\t\t    \"5\" : \"\\五\",        \r\n");
      out.write("\t\t\t\t    \"6\" : \"\\六\"       \r\n");
      out.write("\t\t\t\t    };        \r\n");
      out.write("\t\t\t\t    if(/(y+)/.test(fmt)){        \r\n");
      out.write("\t\t\t\t        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));        \r\n");
      out.write("\t\t\t\t    }        \r\n");
      out.write("\t\t\t\t    if(/(E+)/.test(fmt)){        \r\n");
      out.write("\t\t\t\t        fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? \"\\星\\期\" : \"\\周\") : \"\")+week[this.getDay()+\"\"]);        \r\n");
      out.write("\t\t\t\t    }        \r\n");
      out.write("\t\t\t\t    for(var k in o){        \r\n");
      out.write("\t\t\t\t        if(new RegExp(\"(\"+ k +\")\").test(fmt)){        \r\n");
      out.write("\t\t\t\t            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));        \r\n");
      out.write("\t\t\t\t        }        \r\n");
      out.write("\t\t\t\t    }        \r\n");
      out.write("\t\t\t\t    return fmt;        \r\n");
      out.write("\t\t\t\t}      \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#begindate\").val(new Date().pattern(\"yyyy/MM/dd\"));\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
