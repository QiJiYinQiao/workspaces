/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2015-07-14 02:09:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class center_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\">\r\n");
      out.write("\tvar centerTabs;\r\n");
      out.write("\tvar tabsMenu;\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\ttabsMenu = $('#tabsMenu').menu({\r\n");
      out.write("\t\t\tonClick : function(item) {\r\n");
      out.write("\t\t\t\tvar curTabTitle = $(this).data('tabTitle');\r\n");
      out.write("\t\t\t\tvar type = $(item.target).attr('type');\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (type === 'refresh') {\r\n");
      out.write("\t\t\t\t\trefreshTab(curTabTitle);\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif (type === 'close') {\r\n");
      out.write("\t\t\t\t\tvar t = centerTabs.tabs('getTab', curTabTitle);\r\n");
      out.write("\t\t\t\t\tif (t.panel('options').closable) {\r\n");
      out.write("\t\t\t\t\t\tcenterTabs.tabs('close', curTabTitle);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar allTabs = centerTabs.tabs('tabs');\r\n");
      out.write("\t\t\t\tvar closeTabsTitle = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.each(allTabs, function() {\r\n");
      out.write("\t\t\t\t\tvar opt = $(this).panel('options');\r\n");
      out.write("\t\t\t\t\tif (opt.closable && opt.title != curTabTitle && type === 'closeOther') {\r\n");
      out.write("\t\t\t\t\t\tcloseTabsTitle.push(opt.title);\r\n");
      out.write("\t\t\t\t\t} else if (opt.closable && type === 'closeAll') {\r\n");
      out.write("\t\t\t\t\t\tcloseTabsTitle.push(opt.title);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tfor ( var i = 0; i < closeTabsTitle.length; i++) {\r\n");
      out.write("\t\t\t\t\tcenterTabs.tabs('close', closeTabsTitle[i]);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tcenterTabs = $('#centerTabs').tabs({\r\n");
      out.write("\t\t\t\t\t\ttools : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls : 'icon-reload',\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar href = $('#centerTabs').tabs('getSelected').panel('options').href;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (href) {/*说明tab是以href方式引入的目标页面*/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar index = $('#centerTabs').tabs('getTabIndex', $('#centerTabs').tabs('getSelected'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$('#centerTabs').tabs('getTab', index).panel('refresh');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {   /*说明tab是以content方式引入的目标页面*/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar panel = $('#centerTabs').tabs('getSelected').panel('panel');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar frame = panel.find('iframe');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tif (frame.length > 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tfor ( var i = 0; i < frame.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tframe[i].contentWindow.document.write('');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tframe[i].contentWindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tframe[i].src = frame[i].src;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif ($.browser.msie) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tCollectGarbage();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\ticonCls : 'icon-cancel',\r\n");
      out.write("\t\t\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar index = $('#centerTabs').tabs('getTabIndex', $('#centerTabs').tabs('getSelected'));\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar tab = $('#centerTabs').tabs('getTab', index);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif (tab.panel('options').closable) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$('#centerTabs').tabs('close', index);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$.messager.alert('提示', '[' + tab.panel('options').title + ']不可以被关闭', 'error');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("                     \t\t\t}\r\n");
      out.write("                    \t\t},{\r\n");
      out.write("                    \t\t   iconCls:'icon-color',\r\n");
      out.write("\t\t\t                   handler:function(){\r\n");
      out.write("\t\t\t\t                   $('#theme').menu({   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonClick:function(item){   \r\n");
      out.write("\t\t\t\t                        var cookiesColor1=jqueryUtil.cookies.get(\"cookiesColor\");\r\n");
      out.write("\t\t\t\t                        \tif(cookiesColor1!=item.id){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tjqueryUtil.cookies.set(\"cookiesColor\",item.id,30);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tjqueryUtil.chgSkin(item.id,cookiesColor1);\r\n");
      out.write("\t\t\t\t                            }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t                    $('#theme').menu('show', {   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t left: '91%',   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t top: 97   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t                    }\r\n");
      out.write("                    \t\t}],\r\n");
      out.write("\t\t\tfit : true,\r\n");
      out.write("\t\t\tborder : false,\r\n");
      out.write("\t\t\tonContextMenu : function(e, title) {\r\n");
      out.write("\t\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\ttabsMenu.menu('show', {\r\n");
      out.write("\t\t\t\t\tleft : e.pageX,\r\n");
      out.write("\t\t\t\t\ttop : e.pageY\r\n");
      out.write("\t\t\t\t}).data('tabTitle', title);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\tvar d =$(\"#dataTree\").tree({\r\n");
      out.write("\t\t\t\t\tanimate:true,\r\n");
      out.write("\t\t\t\t\tcheckbox:false,\r\n");
      out.write("\t\t\t\t\tonlyLeafCheck:true,\r\n");
      out.write("\t\t\t\t\turl:'data/tree_data2.json',\r\n");
      out.write("\t\t\t\t\tonClick: function(node){\r\n");
      out.write("\t\t\t\t\t\t\taddTab(node);  // alert node text property when clicked\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\tfunction addTab(node) {\r\n");
      out.write("\t\tvar nodes=node.split(\"||\");\r\n");
      out.write("\t\tif (centerTabs.tabs('exists', nodes[0])) {\r\n");
      out.write("\t\t\tcenterTabs.tabs('select', nodes[0]);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t/*if (node.attributes.url && node.attributes.url.length > 0) {\r\n");
      out.write("\t\t\t\tif (node.attributes.url.indexOf('!druid.action') == -1) {//数据源监控页面不需要开启等待提示\r\n");
      out.write("\t\t\t\t\t$.messager.progress({\r\n");
      out.write("\t\t\t\t\t\ttext : '页面加载中....',\r\n");
      out.write("\t\t\t\t\t\tinterval : 100\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\twindow.setTimeout(function() {\r\n");
      out.write("\t\t\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\t\t\t$.messager.progress('close');\r\n");
      out.write("\t\t\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}, 5000);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tcenterTabs.tabs('add', {\r\n");
      out.write("\t\t\t\t\ttitle : node.text,\r\n");
      out.write("\t\t\t\t\tclosable : true,\r\n");
      out.write("\t\t\t\t\ticonCls : node.iconCls,\r\n");
      out.write("\t\t\t\t\tcontent : '<iframe src=\"' + node.attributes.url + '\" frameborder=\"0\" style=\"border:0;width:100%;height:99.4%;\"></iframe>',\r\n");
      out.write("\t\t\t\t\ttools : [ {\r\n");
      out.write("\t\t\t\t\t\ticonCls : 'icon-mini-refresh',\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\trefreshTab(node.text);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else {}*/\r\n");
      out.write("\t\t\t\tcenterTabs.tabs('add', {\r\n");
      out.write("\t\t\t\t\ttitle : nodes[0],\r\n");
      out.write("\t\t\t\t\tclosable : true,\r\n");
      out.write("\t\t\t\t\t//border:false,\r\n");
      out.write("\t\t\t\t\ticonCls : nodes[1],\r\n");
      out.write("\t\t\t\t\t//href : 'error/error.jsp',\r\n");
      out.write("\t\t\t\t\tcontent : \"<iframe src=\"+nodes[2]+\" frameborder=\\\"0\\\" style=\\\"border:0;width:100%;height:99.4%;\\\"></iframe>\",\r\n");
      out.write("\t\t\t\t\ttools : [ {\r\n");
      out.write("\t\t\t\t\t\ticonCls : 'icon-mini-refresh',\r\n");
      out.write("\t\t\t\t\t\thandler : function() {\r\n");
      out.write("\t\t\t\t\t\t\trefreshTab(nodes[0]);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction refreshTab(title) {\r\n");
      out.write("\t\tvar tab = centerTabs.tabs('getTab', title);\r\n");
      out.write("\t\tcenterTabs.tabs('update', {\r\n");
      out.write("\t\t\ttab : tab,\r\n");
      out.write("\t\t\toptions : tab.panel('options')\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<div id=\"centerTabs\">\r\n");
      out.write("\t<div iconCls=\"icon-home\" title=\"首页\" border=\"false\" style=\"overflow: hidden;\">\r\n");
      out.write("\t\t<iframe src=\"layout/portal.jsp\" frameborder=\"0\" style=\"border:0;width:100%;height:99.4%;\"></iframe>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"tabsMenu\" style=\"width: 120px;display:none;\">\r\n");
      out.write("\t<div type=\"refresh\">刷新</div>\r\n");
      out.write("\t<div class=\"menu-sep\"></div>\r\n");
      out.write("\t<div type=\"close\">关闭</div>\r\n");
      out.write("\t<div type=\"closeOther\">关闭其他</div>\r\n");
      out.write("\t<div type=\"closeAll\">关闭所有</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"theme\" class=\"easyui-menu\" style=\"width:120px;display: none\">  \r\n");
      out.write("\t\t    <div id=\"default\" data-options=\"iconCls:'icon-save'\">default</div>  \r\n");
      out.write("\t\t    <div id=\"black\">black</div> \r\n");
      out.write("\t\t    <div id=\"bootstrap\" data-options=\"iconCls:'icon-save'\">bootstrap</div>  \r\n");
      out.write("\t\t    <div id=\"gray\" data-options=\"iconCls:'icon-save'\">gray</div>  \r\n");
      out.write("\t\t    <div id=\"metro\" data-options=\"iconCls:'icon-save'\">metro</div>  \r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
